local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library", true))()

local window = library:AddWindow("ùêáùüëùêãùêã ùêïùüë", {
    main_color = Color3.fromRGB(66, 164, 115), -- Color
    min_size = Vector2.new(470, 470), -- Size of the GUI
    can_resize = false,
})

local Main = window:AddTab("Main")
local folder1 = Main:AddFolder("Auto Sizes")

folder1:AddSwitch("Auto Size 2", function(Value)
  autosize2 = Value
  if autosize2 then
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
    end
    autoSizeLoop = task.spawn(function()
      while autosize2 do
        task.wait(0)
        game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 1)
      end
    end)
  else
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
      autoSizeLoop = nil
    end
  end
end)

folder1:AddSwitch("Auto size 10", function(Value)
  autosize10 = Value
  if autosize10 then
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
    end
    autoSizeLoop = task.spawn(function()
      while autosize10 do
        task.wait(0)
        game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 10)
      end
    end)
  else
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
      autoSizeLoop = nil
    end
  end
end)

folder1:AddSwitch("Auto Size 50", function(Value)
  autosize50 = Value
  if autosize50 then
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
    end
    autoSizeLoop = task.spawn(function()
      while autosize50 do
        task.wait(0)
        game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 50)
      end
    end)
  else
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
      autoSizeLoop = nil
    end
  end
end)

folder1:AddSwitch("Auto Size 100", function(Value)
  autosize100 = Value
  if autosize100 then
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
    end
    autoSizeLoop = task.spawn(function()
      while autosize100 do
        task.wait(0)
        game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 100)
      end
    end)
  else
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
      autoSizeLoop = nil
    end
  end
end)

folder1:AddSwitch("Auto Size NAN | Very Tiny", function(Value)
  autosizenan = Value
  if autosizenan then
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
    end
    autoSizeLoop = task.spawn(function()
      while autosizenan do
        task.wait(0)
        game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", -9223372036854776000)
      end
    end)
  else
    if autoSizeLoop then
      task.cancel(autoSizeLoop)
      autoSizeLoop = nil
    end
  end
end)

local folder2 = Main:AddFolder("Anti Shi") 

folder2:AddButton("Anti Afk", function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
end)

folder2:AddButton("FPS Boost", function()  
  if not fpsBoostActive then
    fpsBoostActive = true
    RemoveLag()
    cleanupLoop = task.spawn(function()
      while fpsBoostActive do
        wait(30)
        RemoveLag()
      end
    end)
  else
    fpsBoostActive = false
    if cleanupLoop then
      task.cancel(cleanupLoop)
      cleanupLoop = nil
    end
  end
end)

folder2:AddSwitch("Anti Accept Trade", function(Value)  
  antiaccepttrade = Value
  if antiaccepttrade then
    local OldNameCall = nil
    OldNameCall = hookmetamethod(game, "__namecall", function(self, ...)
      local Args = {...}
      if self.Name == "tradingEvent" and Args[1] == "acceptTrade" then
        return
      end
      return OldNameCall(self, unpack(Args))
    end)
  end
end)

folder2:AddSwitch("Anti Rebirth", function(State)
  antirebirth = State
  if antirebirth then
    local OldNameCall = nil
    OldNameCall = hookmetamethod(game, "__namecall", function(self, ...)
      local Args = {...}
      if self.Name == "rebirthRemote" and Args[1] == "rebirthRequest" then
        return
      end
      return OldNameCall(self, unpack(Args))
    end)
  end
end)

local folder3 = Main:AddFolder("Misc V1")

folder3:AddSwitch("Auto Spin Wheel", function(v)
  autospinwheel = v
  if autospinwheel then
    task.spawn(function()
      while autospinwheel do
        game:GetService("ReplicatedStorage").rEvents.openFortuneWheelRemote:InvokeServer("openFortuneWheel", game:GetService("ReplicatedStorage").fortuneWheelChances["Fortune Wheel"])
        task.wait(1)
      end
    end)
  end
end)

folder3:AddSwitch("Auto claim Gifts", function(v) 
  autoclaimgifts = v
  if autoclaimgifts then
    task.spawn(function()
      while autoclaimgifts do
        for i = 1, 8 do
          game:GetService("ReplicatedStorage").rEvents.freeGiftClaimRemote:InvokeServer("claimGift", i)
        end
        task.wait(1)
      end
    end)
  end
end)

folder3:AddSwitch("Night time", function(State)   
  nighttime = State
  if nighttime then
    game.Lighting.TimeOfDay = "00:00:00"
  else
    game.Lighting.TimeOfDay = "12:00:00"
  end
end)

folder3:AddSwitch("Dawn | Morning", function(State)  
  morning = State
  if morning then
    game.Lighting.TimeOfDay = "07:00:00"
  else
    game.Lighting.TimeOfDay = "12:00:00"
  end
end)

folder3:AddSwitch("No Clip", function(Value) 
  noclip = Value
  local RunService = game:GetService("RunService")
  local Players = game:GetService("Players")
  local LocalPlayer = Players.LocalPlayer
  if noclip then
    getgenv().noclipConnection = RunService.Stepped:Connect(function()
      for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
        if part:IsA("BasePart") then
          part.CanCollide = false
        end
      end
    end)
  else
    if getgenv().noclipConnection then
      getgenv().noclipConnection:Disconnect()
      getgenv().noclipConnection = nil
    end
  end
end)

folder3:AddSwitch("Kill Aura", function(v) 
  killaura = v
  if killaura then
    getgenv().killNearby = v
    local radiusVisual = Instance.new("Part")
    radiusVisual.Anchored = true
    radiusVisual.CanCollide = false
    radiusVisual.Transparency = 0.9
    radiusVisual.Material = Enum.Material.ForceField
    radiusVisual.Color = Color3.fromRGB(225, 0, 0)
    radiusVisual.Size = Vector3.new(1, 0.1, 1)
    task.spawn(function()
      while getgenv().killNearby do
        pcall(function()
          local Players = game:GetService("Players")
          local LocalPlayer = Players.LocalPlayer
          local myCharacter = LocalPlayer.Character
          local myRoot = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
          if myRoot then
            radiusVisual.Parent = workspace
            -- currentRadius should be defined elsewhere in your script
            radiusVisual.Size = Vector3.new(currentRadius * 2, 0.1, currentRadius * 2)
            radiusVisual.CFrame = myRoot.CFrame * CFrame.new(0, -2, 0)
            for _, player in pairs(Players:GetPlayers()) do
              if player ~= LocalPlayer then
                local char = player.Character
                local root = char and char:FindFirstChild("HumanoidRootPart")
                if root and myRoot then
                  local distance = (root.Position - myRoot.Position).Magnitude
                  if distance <= currentRadius then
                    firetouchinterest(root, myCharacter.LeftHand, 0)
                    task.wait()
                    firetouchinterest(root, myCharacter.LeftHand, 1)
                    -- gettool() -- define or remove if not used
                  end
                end
              end
            end
            task.wait(0.1)
          end
        end)
        task.wait(0.1)
      end
      radiusVisual:Destroy()
    end)
  end
end)

folder4:AddButton("Destroy AD Portal", function()
  local part = workspace:FindFirstChild("RobloxForwardPortals")
  if part then
    part:Destroy()
  end
end)

local folder4 = Main:AddFolder("Auto Brawls") 

folder4:AddSwitch("Auto Brawl | Normal", function(State) 
  autobrawlnormal = State
  if autobrawlnormal then
    task.spawn(function()
      while autobrawlnormal do
        game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
        task.wait(2)
      end
    end)
  end
end)

folder4:AddSwitch("Auto Brawl | GOD", function(State)  
  autobrawlgod = State
  if autobrawlgod then
    task.spawn(function()
      while autobrawlgod do
        game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
        task.wait(0)
      end
    end)
  end
end)

local AutoWeight = window:AddTab("Auto Weight")
local folder5 = AutoWeight:AddFolder("Lil Increasers n shi")   

folder5:AddButton("Free Auto Lift Gamepass", function() 
  local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
  local player = game:GetService("Players").LocalPlayer
  for _, gamepass in pairs(gamepassFolder:GetChildren()) do
    local value = Instance.new("IntValue")
    value.Name = gamepass.Name
    value.Value = gamepass.Value
    value.Parent = player.ownedGamepasses
  end
end)
